pipeline {
    agent any
        environment {
        TEST_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:tagas,Values=test --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
        PROD_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:tagas,Values=prod --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
    }
    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }
        stage('Build') {
            steps {
                sh 'echo "Cloning repository..."'
                sh 'git clone https://github.com/Orelbaz/flask-docker.git'
                sh 'ls'
                sh 'echo "Dockring..."'
                dir('/var/lib/jenkins/workspace/docker-pipeline/flask-docker/CoinSite') {
                def TAG = sh(script: "cat .env | grep TAG | cut -d '=' -f2", returnStdout: true).trim()
                sh "docker build --build-arg TAG=${TAG} -t orelbaz/coinsite:${TAG} ."
                sh 'echo "Pushing to DockerHub"'
                sh "docker push orelbaz/coinsite:${env.TAG}"
                }
            }
        }
        stage('Test-server') {
            steps {
                    sh '/bin/bash /var/lib/jenkins/workspace/docker-pipeline/flask-docker/deploy.sh ${TEST_IP} ${TAG}'
                    sh 'echo "Running tests..."'
                    sh '/bin/bash "/var/lib/jenkins/workspace/docker-pipeline/flask-docker/Testing.sh"'
            }
        }
        stage ('Aprove') {
            steps {
                sh 'echo "Waiting for aproval..."'
                // For auto aproval add '//' before input line, for manual aproval remove '//' from input line
                input 'Do you want to deploy project to production?'
            }
        }
        stage('Prod-server') {
            steps { 
                sh '/bin/bash /var/lib/jenkins/workspace/docker-pipeline/flask-docker/deploy.sh ${PROD_IP} ${TAG}'
            }
        }
    }
}
